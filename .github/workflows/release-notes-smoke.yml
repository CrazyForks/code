name: release-notes-smoke

on:
  workflow_dispatch:
    inputs:
      extra_flags:
        description: "Additional flags to pass to 'code exec' (optional)"
        default: ""
        required: false

permissions:
  contents: read

jobs:
  smoke:
    name: CLI smoke via npm (@just-every/code)
    runs-on: ubuntu-24.04
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Show CLI help (exec) using published package
        shell: bash
        run: |
          set -euo pipefail
          npx -y @just-every/code@latest exec --cd "$GITHUB_WORKSPACE" --full-auto --skip-git-repo-check --help | sed -n '1,80p'

      - name: Live smoke run with default model (published package)
        shell: bash
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          set -euo pipefail
          if [ -z "${OPENAI_API_KEY:-}" ]; then
            echo "OPENAI_API_KEY secret is not configured; cannot run live smoke. Configure the secret or pass a key at runtime." >&2
            exit 1
          fi
          out=$(mktemp)
          err=$(mktemp)
          printf '%s\n' \
            'You are Code running a quick smoke check.' \
            '' \
            'Please:' \
            '1) Run: ls -1 (in the current working directory).' \
            '2) Briefly describe the top-level files/directories you see.' \
            '3) Conclude with a short "done" and nothing else.' \
            'Notes: Do NOT run builds or long tasks.' \
            | \
            npx -y @just-every/code@latest exec \
              --cd "$GITHUB_WORKSPACE" \
              --full-auto \
              --skip-git-repo-check \
              ${{ github.event.inputs.extra_flags }} - \
            > "$out" 2> "$err"
          # Fail fast on CLI parse errors
          if grep -E "unexpected argument|For more information, try '--help'\." "$err"; then
            echo "Arg parsing failed (see stderr above)" >&2
            cat "$err" >&2
            exit 1
          fi
          # Fail on auth issues
          if grep -qiE "unauthorized|invalid api key|exceeded retry limit" "$err"; then
            echo "Live API call failed (see stderr above)" >&2
            cat "$err" >&2
            exit 1
          fi
          echo "CLI + API request succeeded (default model). Showing first lines:"
          sed -n '1,40p' "$out" || true
          echo "CLI parsed arguments successfully (exit=$status)." 
          echo "stderr (first lines):"
          sed -n '1,40p' "$err" || true
          echo "stdout (first lines):"
          sed -n '1,40p' "$out" || true
