You are Code running headless in CI to prepare a new release.

Inputs
- Version: v0.2.73
- Date (UTC): 2025-09-06
- Previous tag: v0.2.72
- Commit range: v0.2.72..HEAD
- Working directory: repo root (CHANGELOG.md lives at top-level)

Primary Tasks
1) Update CHANGELOG.md with a new entry for this version using the EXACT house style below.
2) Generate GitHub release notes at release-notes/RELEASE_NOTES.md (concise, user‑facing), derived from the same changes.

CHANGELOG.md House Style (strict)
- File header stays as-is ("Changelog"). Do not rewrite older sections.
- Insert the new section at the top (above previous versions), with this header format exactly:
  ## [0.2.73] - 2025-09-06
- Include 2–5 bullets (no more, no fewer), each a single line, focusing on user-visible features, fixes, UX, performance, or stability.
- Keep bullets concise and scannable; avoid long prose. Use present tense.
- When helpful, start bullets with a short scope label like "TUI:", "CLI:", or "Core:".
- At the end of each bullet, include abbreviated commit SHA(s) in parentheses, using 7–8 hex chars, comma‑separated when multiple, like: (abc1234, def5678).
- Map changes from the git commit log in v0.2.72..HEAD; ignore pure chores/merges unless user‑visible.
- Do NOT add links, tables, code blocks, or subheadings. Do NOT include PR author attributions in the changelog.
- Do NOT add any extra headers inside the changelog entry; only bullets under the version header.
- Idempotent: if a section for 0.2.73 already exists, replace only that section’s body with the newly generated bullets and keep the header intact.

Release Notes (release-notes/RELEASE_NOTES.md)
- Write exactly these sections in order; include the optional Thanks section only when applicable:
  1) Title: ## @just-every/code v0.2.73
  2) One brief intro sentence (1–2 lines max).
  3) Section header: ### Changes
     - The same 2–5 bullets as in the changelog (you may omit SHAs).
  4) Section header: ### Install
     Code block with exactly:
     npm install -g @just-every/code@latest
     code
  5) Optional section header: ### Thanks
     - Include ONE line like: "Thanks to @alice and @bob for contributions!"
     - Only include if at least one merged PR in v0.2.72..HEAD is authored by an external contributor.
     - External contributors are any GitHub users other than: @zemaj, @andrej-griniuk, and NOT upstream contributors.
     - Treat a username as upstream if it matches the regex /-oai$/i, or clearly belongs to the upstream org (e.g., OpenAI maintainers). Exclude such users from Thanks.
     - Derive usernames from merge commits, Co-authored-by trailers, or PR references in commit messages. Deduplicate and prefer "@username" form.
- Keep notes concise; no walls of text. Do not add any other sections beyond the optional Thanks.
- Optional final line (only if a previous tag exists):
  Compare: https://github.com/just-every/code/compare/v0.2.72...v0.2.73

Rules
- Use the provided git log as source of truth; summarize responsibly.
- Explore codebase directly if commit messages are unclear or need additional context.
- Keep formatting minimal (headers + list bullets). No emojis ever! Basic markdown only.
- Never reorder older versions. Only touch the section for v0.2.73.
- After writing files, stage and commit with message: docs(changelog): update for v0.2.73 [skip ci]

Context (git log excerpt follows):
# Commit log (v0.2.72..HEAD)
* 7af86fb6 chore(release): 0.2.73 [skip ci] (GitHub Action)
* dd9ff4b8 build: default CARGO_HOME/.cargo-home and CARGO_TARGET_DIR to workspace for sandboxed CI; use sparse registry; create dirs proactively (James Peter)
* 230cdb91 ci: install ripgrep for agents; enable network in workspace-write; fix Cargo perms by setting CARGO_HOME/CARGO_TARGET_DIR inside workspace; add upstream no-op gate to avoid unnecessary runs (James Peter)
* 510c323b ci: enable network for exec runs via -c sandbox_workspace_write.network_access=true; keep workspace-write and git writes opt-in (James Peter)
* 87ae88cf fix(ci): remove invalid '-a never' from 'code exec' invocations; verified CLI locally; keep sandbox workspace-write + allow_git_writes (James Peter)
* 086be4a5 ci(upstream-merge): avoid  + 1) parsing bug; pipe heredoc directly to agent; include explicit Context with resolved env values; keep workspace-write + allow_git_writes (James Peter)
* 854525c9 ci(upstream-merge): pass sandbox/approval flags after subcommand (code exec …) so Exec CLI receives them; should switch from read-only to workspace-write in CI (James Peter)
* c4ce2088 ci(upstream-merge): apply formatting fixes to workflow file (James Peter)
* 06190bba ci(upstream-merge,issue-triage): fix heredoc quoting to prevent shell expansion; correct rust-cache workspace mapping to 'codex-rs -> target' for effective caching (James Peter)
* e7ff9981 docs(changelog): update for v0.2.72 [skip ci] (GitHub Action)
